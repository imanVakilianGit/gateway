# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type OptionsTemplate {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime!
  title: String!
  business_category_id: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type BusinessCategoryEntity {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime!
  title: String!
  slug: String!
  description: String
  options_template: [OptionsTemplate]
}

type BusinessCategoriesEntity {
  totalCount: Int!
  totalPage: Int!
  limit: Int!
  page: Int!
  count: Int!
  sortBy: String
  orderBy: String
  businessCategories: [BusinessCategoryEntity]!
}

type CreateBusinessCategoryResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
  data: BusinessCategoryEntity
}

interface BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
}

type FindAllBusinessCategoriesResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
  data: BusinessCategoriesEntity
}

type FindOneBusinessCategoryResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
  data: BusinessCategoryEntity
}

type FindOneBusinessCategoryBySlugResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
  data: BusinessCategoryEntity
}

type BusinessCategory {
  title: String!
}

type User {
  id: Int!
  first_name: String!
  last_name: String!
  email: String!
}

type Employee {
  id: Int!
  user: User!
}

type Manager {
  id: Int!
  employee: Employee!
}

type BusinessOptionEntity {
  id: Int!
  created_at: DateTime
  updated_at: DateTime
  title: String!
  value: String!
}

type BusinessExtraOptionEntity {
  id: Int!
  created_at: DateTime
  updated_at: DateTime
  title: String!
  value: String!
}

type BusinessEntity {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime!
  manager_id: Int
  name: String!
  slug: String!
  is_active: Boolean
  manager: Manager
  business_category: BusinessCategory
  options: [BusinessOptionEntity!]
  extra_options: [BusinessExtraOptionEntity!]
}

type BusinessesEntity {
  totalCount: Int!
  totalPage: Int!
  limit: Int!
  page: Int!
  count: Int!
  sortBy: String
  orderBy: String
  businesses: [BusinessEntity]!
}

type CreateBusinessResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
  data: BusinessEntity
}

type FindAllBusinessesResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
  data: BusinessesEntity
}

type FindOneBusinessResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
  data: BusinessEntity
}

type FindOneBusinessBySlugResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
  data: BusinessEntity
}

type UpdateBusinessResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
  data: BusinessEntity
}

type UserProfileEntity {
  id: Int!
  created_at: DateTime!
  updated_at: DateTime!
  national_code: String!
  mobile_number: String!
  email: String!
  first_name: String!
  last_name: String!
  birth_date: DateTime!
  gender: String!
  active_status: String!
}

type UserProfilesEntity implements PaginationResponse {
  totalCount: Int!
  totalPage: Int!
  limit: Int!
  page: Int!
  count: Int!
  sortBy: String
  orderBy: String
  profiles: [UserProfileEntity]!
}

interface PaginationResponse {
  totalCount: Int!
  totalPage: Int!
  limit: Int!
  page: Int!
  count: Int!
  sortBy: String
  orderBy: String
}

type CreateUserProfileResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
  data: UserProfileEntity
}

type FindAllUserProfilesResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
  data: UserProfilesEntity
}

type FindOneUserProfileResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
  data: UserProfileEntity
}

type UpdateUserProfileResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
  data: UserProfileEntity
}

type UserLoginResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
}

type UserConfirmLoginResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
}

type UserLogoutResponse implements BaseResponse {
  service: String!
  success: Boolean!
  statusCode: Int!
  message: String!
  code: String!
}

type Query {
  findAllUserProfiles(dto: FindAllUserProfilesInput!): FindAllUserProfilesResponse!
  findOneUserProfile(dto: FindOneUserProfileInput!): FindOneUserProfileResponse!
  findAllBusinessCategories(dto: FindAllBusinessCategoriesInput!): FindAllBusinessCategoriesResponse!
  findOneBusinessCategory(dto: FindOneBusinessCategoryInput!): FindOneBusinessCategoryResponse!
  findOneBusinessCategoryBySlug(dto: FindOneBusinessCategoryBySlugInput!): FindOneBusinessCategoryBySlugResponse!
  findAllBusinesses(dto: FindAllBusinessesInput!): FindAllBusinessesResponse!
  findOneBusiness(dto: FindOneBusinessInput!): FindOneBusinessResponse!
  findOneBusinessBySlug(dto: FindOneBusinessBySlugInput!): FindOneBusinessBySlugResponse!
}

input FindAllUserProfilesInput {
  exampleField: Int!
}

input FindOneUserProfileInput {
  id: Int!
}

input FindAllBusinessCategoriesInput {
  page: Int
  limit: Int
  sortBy: String
  orderBy: String
  title: String
}

input FindOneBusinessCategoryInput {
  id: Int!
}

input FindOneBusinessCategoryBySlugInput {
  slug: String!
}

input FindAllBusinessesInput {
  page: Int
  limit: Int
  sortBy: String
  orderBy: String
  name: String
}

input FindOneBusinessInput {
  id: Int!
}

input FindOneBusinessBySlugInput {
  slug: String!
}

type Mutation {
  createUserProfile(dto: CreateProfileInput!): CreateUserProfileResponse!
  updateUserProfile(dto: UpdateUserProfileInput!): UpdateUserProfileResponse!
  userLoginByMobile(dto: UserLoginByMobileInput!): UserLoginResponse!
  userLoginByEmail(dto: UserLoginByEmailInput!): UserLoginResponse!
  userConfirmLogin(dto: UserConfirmLoginInput!): UserConfirmLoginResponse!
  userLogout: UserLogoutResponse!
  createBusinessCategory(dto: CreateBusinessCategoryInput!): CreateBusinessCategoryResponse!
  createBusiness(dto: CreateBusinessInput!): CreateBusinessResponse!
  updateBusiness(dto: UpdateBusinessInput!): UpdateBusinessResponse!
}

input CreateProfileInput {
  nationalCode: String!
  mobileNumber: String!
  email: String!
  firstName: String!
  lastName: String!
  birthDate: DateTime!
  gender: String!
}

input UpdateUserProfileInput {
  id: Int
  firstName: String
  lastName: String
  birthDate: DateTime
}

input UserLoginByMobileInput {
  mobileNumber: String!
}

input UserLoginByEmailInput {
  email: String!
}

input UserConfirmLoginInput {
  otpCode: String!
  receiver: String!
}

input CreateBusinessCategoryInput {
  title: String!
  description: String
  options: [OptionTemplateInput!]!
}

input OptionTemplateInput {
  title: String!
}

input CreateBusinessInput {
  businessCategoryId: Int!
  name: String!
  options: [BusinessOptionsInput!]!
  extraOptions: [BusinessOptionsInput!]!
}

input BusinessOptionsInput {
  title: String!
  value: String!
}

input UpdateBusinessInput {
  id: Int!
  name: String
  options: [UpdateBusinessOptionsInput]
  extraOptions: [UpdateBusinessExtraOptionsInput]
}

input UpdateBusinessOptionsInput {
  id: Int!
  value: String!
}

input UpdateBusinessExtraOptionsInput {
  id: Int!
  title: String
  value: String
}